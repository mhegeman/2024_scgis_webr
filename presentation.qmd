
---
title: "Shiny Happy People Sharing Geospatial Data"
author:  Bobby Sayers and Melissa Albino Hegeman
date: September 6, 2024
format: 
  revealjs:
    theme: moon
    transition: slide
    slide-number: true
    footer: 'SCGIS Annual Conference 2024'
---

## Disclaimer

The opinions represented here are our own and do not reflect NYS policy.


## Who we are

::: columns

::: {.column width="35%"}
- Bobby Sayers  
- Melissa Albino Hegeman  
:::

::: {.column width="65%"}
- Map nerds
- Marine Biologists  
- R/Python/SQL users

:::
:::

::: notes

Who are we and why should you listen to us?
We both work with commercial fishing data for NYSDEC in addition to being the GIS support staff for our Division. 

We've been using R (and Python) on the daily for years and struggle when we want to share our work. Particularly with non-technical people. 

:::

## Some Common Roadblocks

- Expensive servers and hosting solutions üí∞  
- Proprietary software üíæ
- Complex installation processes üß© 
- Ongoing maintenance üõ†

::: notes
Mapping has been a real sticking point lately for us lately. Things like Google Maps have set peoples expectations pretty high. People want to zoom, pan, compare different data sets, click on maps for more information, etc. Traditionally that type of functionality has required more enterprise level tools and/or software, or a server to host the app. More resources than an average individual or small office may have available. 

:::

##

:::: columns

::: {.column}
![](assets/shiny.png)

:::

::: {.column}

- Web application framework
- Available in both R and Python
![](assets/webr.png)

:::

::::

::: notes

In the past we've used locally running Shiny Apps to address these problems, but that requires the user to have R running on their computer...

Is anyone currently using Shiny? For R or Python? 

In the last few years we've started hearing about WebR which all
Mapping has been a real sticking point lately for us lately. Things like Google Maps have set peoples expectations pretty high. People want to zoom, pan, compare different data sets, click on maps for more information, etc. Traditionally that type of functionality has required more enterprise level tools and/or software, or a server to host the app. More resources than an average individual or small office may have available. 

:::



## Web Assembly

- Low-level language for web browsers
- Near-native performance
- Key to run R and Python applications without a server
- Something about javascript

::: notes

We aren't going to get into the weeds too much, but for the purposes of this presentation: 

If you are old enough to remember Adobe Flash games it is a similar idea, but secure. 

:::


## The Challenge 

- Make an interactive map üó∫
- Compare two data sources üíª
- Keep it private üîè
- Keep it consistent ‚úÖ


::: notes

We decided to create a challenge for ourselves to see if webR and Pyodide could address some of our issues. 
Our goal was to create a basic, light-weight interactive map that anyone can use without installing anything. 

:::

## Free and Open-Source Options

- Addresses cost and issues associated with being locked into proprietary software, but:
  - Organizational restrictions on installation
  - Platform compatibility
  - Technical expertise of recipients
  
::: notes
Bobby
Our preference is always free and open-source software. This is important for cost issues, but also makes everything more repeatable. 
:::


## R and Python in the browser

What if R and Python were already in your browser?

## Enter Shiny Live: A Game-Changer

- Web-based solution for interactive applications
- Leverages WebAssembly technology
- Allows creation of lightweight, serverless apps
- Supports both R and Python



## Shiny Live: Key Features

- No server required
- Runs entirely in the browser
- Supports file uploads
- Secure
- Integrates with popular libraries (e.g., leaflet)
- Works with both R and Python


## The App

:::: columns

::: {.column}
![](assets/run_dmr.jpg){width="100%"}
:::

::: {.column}

![](assets/jones_beach.jpg){height="60%"}

![](assets/summer_run.png){height="40%"}
:::
::::

::: notes

We were looking for a low-stakes project to make a proof of concept app. Our office as a running group that participates in Long Island Parks Summer Run Series every year. We thought it would be cool to make an app that would allow us to compare our performances year to year and see how we were improving... or not. 

:::


## Demo: R Shiny Live App

[Insert screenshot or live demo of a simple R Shiny Live app here]

- Upload geospatial data
- Visualize on an interactive map
- Perform basic analysis

## Demo: Python Shiny Live App

[Insert screenshot or live demo of a simple Python Shiny Live app here]

- Similar functionality to R app
- Demonstrates language flexibility

## Benefits for Users

- No installation required
- Access advanced geospatial tools through a web browser
- Upload and analyze personal data securely
- Collaborate easily by sharing a single URL/file

## Getting Started with Shiny Live

1. Install Shiny for Python or R
2. Create your Shiny app
3. Use Shiny Live to convert it for browser use
4. Deploy on GitHub Pages or similar platforms

## Conclusion: Democratizing Geospatial Analysis

- Web Assembly/Shiny Live removes barriers to geospatial data sharing
- Empowers a wider audience to create and use mapping applications
- Encourages innovation and collaboration in geospatial analysis

## Questions?

**Melissa Albino Hegeman:** melissa.hegeman@gmail.com
**Bobby Sayers:** sayersr@mac.com
